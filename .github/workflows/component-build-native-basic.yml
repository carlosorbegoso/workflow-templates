name: Build Quarkus Native Image

on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.build-info.outputs.artifact-name }}
    timeout-minutes: 60
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Detect build tool
        id: build-tool
        run: |
          if [ -f "pom.xml" ]; then
            echo "tool=maven" >> $GITHUB_OUTPUT
          elif [ -f "build.gradle" ] || [ -f "build.gradle.kts" ]; then
            echo "tool=gradle" >> $GITHUB_OUTPUT
          else
            echo "No pom.xml o build.gradle encontrado"
            exit 1
          fi

      - name: Build with Maven
        if: steps.build-tool.outputs.tool == 'maven'
        timeout-minutes: 60
        run: |
          ./mvnw clean package -Pnative -DskipTests

      - name: Build with Gradle
        if: steps.build-tool.outputs.tool == 'gradle'
        timeout-minutes: 60
        run: |
          ./gradlew clean build \
            -x test \
            -Dquarkus.package.jar.enabled=false \
            -Dquarkus.native.enabled=true \
            -Dquarkus.native.container-build=true \
            -Dquarkus.native.additional-build-args="--gc=serial"

      - name: Verify native runner was generated
        if: steps.build-tool.outputs.tool == 'gradle'
        run: |
          echo "Checking for native runner..."
          if find . -maxdepth 3 -name '*-runner' -type f 2>/dev/null | grep -q .; then
            echo "✓ Native runner found"
            find . -maxdepth 3 -name '*-runner' -type f
          else
            echo "❌ ERROR: No native runner found!"
            echo "Contents of build/:"
            ls -lah build/ || echo "build/ does not exist"
            echo "Contents of target/:"
            ls -lah target/ || echo "target/ does not exist"
            exit 1
          fi

      - name: Extract build info
        id: build-info
        run: |
          PROJECT_NAME=$(basename ${{ github.repository }})
          echo "artifact-name=$PROJECT_NAME" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build-info.outputs.artifact-name }}-runner
          # Upload both Maven and Gradle native runner locations so downstream
          # workflows can download the artifact regardless of the build tool used.
          # Maven: target/*-runner
          # Gradle: build/*-runner
          path: |
            target/*-runner
            build/*-runner
          retention-days: 1