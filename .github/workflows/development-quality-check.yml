name: Quality Check

on:
  workflow_call:
    inputs:
      sonar_enabled:
        description: 'Enable SonarQube analysis'
        required: false
        default: false
        type: boolean
    secrets:
      SONAR_TOKEN:
        required: false

jobs:
  quality:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        if: hashFiles('**/pom.xml') != ''
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Cache Gradle packages
        if: hashFiles('**/build.gradle*') != ''
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Cache SonarQube packages
        if: inputs.sonar_enabled
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Detect build tool
        id: build-tool
        run: |
          if [ -f "pom.xml" ]; then
            echo "tool=maven" >> $GITHUB_OUTPUT
          elif [ -f "build.gradle" ] || [ -f "build.gradle.kts" ]; then
            echo "tool=gradle" >> $GITHUB_OUTPUT
          else
            echo "ERROR: No pom.xml o build.gradle encontrado"
            exit 1
          fi

      - name: Run quality checks with Maven
        if: steps.build-tool.outputs.tool == 'maven'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          if [ "${{ inputs.sonar_enabled }}" = "true" ] && [ -n "$SONAR_TOKEN" ]; then
            ./mvnw clean verify sonar:sonar
          else
            ./mvnw clean verify
          fi

      - name: Run quality checks with Gradle
        if: steps.build-tool.outputs.tool == 'gradle'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          if [ "${{ inputs.sonar_enabled }}" = "true" ] && [ -n "$SONAR_TOKEN" ]; then
            ./gradlew clean check sonar
          else
            ./gradlew clean check
          fi