name: Push to Docker Hub

on:
  workflow_call:
    inputs:
      push_to_registry:
        description: 'Whether to push the image to a registry (true/false)'
        required: false
        default: false
        type: boolean
      use_ghcr:
        description: 'Use GitHub Container Registry (ghcr.io) instead of Docker Hub'
        required: false
        default: false
        type: boolean
    secrets:
      DOCKER_USERNAME:
        required: false
      DOCKER_PASSWORD:
        required: false

jobs:
  push:
    runs-on: ubuntu-latest
    outputs:
      docker-image: ${{ steps.docker-image.outputs.full-image }}
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4

      - name: Validate Dockerfile
        run: |
          if [ ! -f "src/main/docker/Dockerfile.native" ]; then
            echo "Error: Dockerfile.native no encontrado"
            exit 1
          fi

      - name: Extract Docker image name
        id: docker-image
        run: |
          PROJECT_NAME=$(basename ${{ github.repository }})
          # Decide registry and image name based on inputs
          if [ "${{ inputs.use_ghcr }}" = "true" ]; then
            IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/$PROJECT_NAME"
            FULL_IMAGE="$IMAGE_NAME:latest"
          else
            DOCKER_USER="${{ secrets.DOCKER_USERNAME }}"
            IMAGE_NAME="$DOCKER_USER/$PROJECT_NAME"
            FULL_IMAGE="docker.io/$IMAGE_NAME:latest"
          fi
          echo "image-name=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "full-image=$FULL_IMAGE" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: ${{ inputs.push_to_registry && !inputs.use_ghcr }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        if: ${{ inputs.push_to_registry && inputs.use_ghcr }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.docker-image.outputs.image-name }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=semver,pattern={{version}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./src/main/docker/Dockerfile.native
          # push will be true only when inputs.push_to_registry is true
          push: ${{ inputs.push_to_registry }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Save image and upload artifact (no push)
        if: ${{ !inputs.push_to_registry }}
        run: |
          # Use the computed image name (tags set by metadata-action). We tag latest locally as well to be safe.
          IMAGE_NAME=${{ steps.docker-image.outputs.image-name }}:latest
          echo "Saving image $IMAGE_NAME to image.tar"
          docker save -o image.tar "$IMAGE_NAME"
      - name: Upload image artifact
        if: ${{ !inputs.push_to_registry }}
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: image.tar

      - name: Docker image info
        run: |
          echo "Imagen: ${{ steps.docker-image.outputs.full-image }}"
          if [ "${{ inputs.use_ghcr }}" = "true" ]; then
            echo "Registry: https://ghcr.io/${{ github.repository_owner }}/${{ github.repository }} (GHCR)"
          else
            echo "Hub: https://hub.docker.com/r/${{ steps.docker-image.outputs.image-name }}"
          fi